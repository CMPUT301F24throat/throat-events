package com.example.pickme.models;


import com.example.pickme.utils.TimestampUtil;
import com.google.firebase.Timestamp;

import java.time.LocalDateTime;

/**
 * Represents an event created by an organizer
 * @author sophiecabungcal
 * @version 1.0
 */
public class Event {

    /* Event Attributes */
    // the unique event id; auto-generated by Firebase [non-nullable]
    private String eventId;
    // the organizer id referencing userId from users collection of the event organizer [non-nullable]
    private String organizerId;
    // the facility id referencing facilityId from facilities collection [non-nullable]
    private String facilityId;
    // the title of the event [non-nullable]
    private String eventTitle;
    // the description of the event [nullable]
    private String eventDescription;
    // the date and time of the event [non-nullable]
    private Timestamp eventDate;
    // the promo qr code id referencing qrCodeId from qrCodes collection [non-nullable]
    private String promoQrCodeId;
    // the waiting list qr code id referencing qrCodeId from qrCodes collection [non-nullable]
    private String waitingListQrCodeId;
    // the poster image id referencing imageId from images collection [nullable]
    private String posterImageId;
    // boolean value representing whether the event requires geo location [non-nullable]
    private boolean geoLocationRequired;
    // integer value representing the maximum number of entrants [nullable]
    private Integer maxEntrants;
    // the date/time the event was created [non-nullable]
    private final Timestamp createdAt;
    // the date/time the event was last updated [non-nullable]
    private Timestamp updatedAt;

    public Event() {
        this.createdAt = Timestamp.now();
    }

    public Event(String organizerId, String facilityId, String eventTitle, String eventDescription, String eventLocation, LocalDateTime eventDate, String promoQrCodeId, String waitingListQrCodeId, String posterImageId, boolean geoLocationRequired, Integer maxEntrants) {
        this.organizerId = organizerId;
        this.facilityId = facilityId;
        this.eventTitle = eventTitle;
        this.eventDescription = eventDescription;
        this.eventDate = TimestampUtil.toTimestamp(eventDate);
        this.promoQrCodeId = promoQrCodeId;
        this.waitingListQrCodeId = waitingListQrCodeId;
        this.posterImageId = posterImageId;
        this.geoLocationRequired = geoLocationRequired;
        this.maxEntrants = maxEntrants;
        this.createdAt = Timestamp.now();
        this.updatedAt = Timestamp.now();
    }

    public void setEventId(String eventId) { this.eventId = eventId; }
    public String getEventId() { return eventId; }

    public void setOrganizerId(String organizerId) {
        this.organizerId = organizerId;
        this.updatedAt = Timestamp.now();
    }
    public String getOrganizerId() { return organizerId; }

    public void setEventTitle(String eventTitle) {
        this.eventTitle = eventTitle;
        this.updatedAt = Timestamp.now();
    }
    public String getEventTitle() { return eventTitle; }

    public void setEventDescription(String eventDescription) {
        this.eventDescription = eventDescription;
        this.updatedAt = Timestamp.now();
    }
    public String getEventDescription() { return eventDescription; }

    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
        this.updatedAt = Timestamp.now();
    }
    public String getFacilityId() { return facilityId;
    }

    public void setEventDate(LocalDateTime eventDate) {
        this.eventDate = TimestampUtil.toTimestamp(eventDate);
        this.updatedAt = Timestamp.now();
    }
    public Timestamp getEventDate() { return eventDate; }

    public void setPromoQrCodeId(String promoQrCodeId) {
        this.promoQrCodeId = promoQrCodeId;
        this.updatedAt = Timestamp.now();
    }
    public String getPromoQrCodeId() { return promoQrCodeId; }

    public void setWaitingListQrCodeId(String waitingListQrCodeId) {
        this.waitingListQrCodeId = waitingListQrCodeId;
        this.updatedAt = Timestamp.now();
    }
    public String getWaitingListQrCodeId() { return waitingListQrCodeId; }

    public void setPosterImageId(String posterImageId) {
        this.posterImageId = posterImageId;
        this.updatedAt = Timestamp.now();
    }
    public String getPosterImageId() { return posterImageId; }

    public void setGeoLocationRequired(boolean geoLocationRequired) {
        this.geoLocationRequired = geoLocationRequired;
        this.updatedAt = Timestamp.now();
    }
    public boolean isGeoLocationRequired() { return geoLocationRequired; }

    public void setMaxEntrants(Integer maxEntrants) {
        this.maxEntrants = maxEntrants;
        this.updatedAt = Timestamp.now();
    }
    public Integer getMaxEntrants() { return maxEntrants; }

    public Timestamp getCreatedAt() { return createdAt; }
    public Timestamp getUpdatedAt() { return updatedAt; }
}
