package com.example.pickme.models;

import com.example.pickme.models.Enums.EntrantStatus;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.GeoPoint;

/**
 * Represents the waiting list entrants for an event's waiting list.
 * This class contains information about each entrant, including their ID, location, status, and timestamps.
 * It provides methods to get and set these attributes.
 *
 * @version 1.0
 */
public class WaitingListEntrant {

    // The unique waiting list entrant ID; auto-generated by Firebase [non-nullable]
    private String waitListEntrantId;
    // The entrant ID referencing the user's id / user's deviceId from users collection [non-nullable]
    private String entrantId;
    // The location of the entrant [nullable]
    private GeoPoint geoLocation;
    // The entrant status of the entrant on the waiting list [non-nullable]
    private EntrantStatus entrantStatus;
    // Boolean value representing whether the entrant has been notified [non-nullable]
    private boolean notified;
    // The date/time the entrant joined the waiting list [non-nullable]
    private final Timestamp createdAt;
    // The date/time the entrant was last updated [non-nullable]
    private Timestamp updatedAt;

    /**
     * Default constructor initializing the createdAt timestamp to the current time.
     */
    public WaitingListEntrant() {
        this.createdAt = Timestamp.now();
    }

    /**
     * Constructor initializing the entrant with specified ID, location, and status.
     *
     * @param entrantId The ID of the entrant.
     * @param geoLocation The geographical location of the entrant.
     * @param entrantStatus The status of the entrant on the waiting list.
     */
    public WaitingListEntrant(String entrantId, GeoPoint geoLocation, EntrantStatus entrantStatus) {
        this.entrantId = entrantId;
        this.geoLocation = geoLocation;
        this.entrantStatus = entrantStatus;
        this.createdAt = Timestamp.now();
        this.updatedAt = Timestamp.now();
    }

    /**
     * Sets the waiting list entrant ID.
     *
     * @param waitListEntrantId The unique ID of the waiting list entrant.
     */
    public void setWaitListEntrantId(String waitListEntrantId) {
        this.waitListEntrantId = waitListEntrantId;
    }

    /**
     * Gets the waiting list entrant ID.
     *
     * @return The unique ID of the waiting list entrant.
     */
    public String getWaitListEntrantId() {
        return waitListEntrantId;
    }

    /**
     * Sets the entrant ID.
     *
     * @param entrantId The ID of the entrant.
     */
    public void setEntrantId(String entrantId) {
        this.entrantId = entrantId;
        this.updatedAt = Timestamp.now();
    }

    /**
     * Gets the entrant ID.
     *
     * @return The ID of the entrant.
     */
    public String getEntrantId() {
        return entrantId;
    }

    /**
     * Sets the geographical location of the entrant.
     *
     * @param geoLocation The geographical location of the entrant.
     */
    public void setGeoLocation(GeoPoint geoLocation) {
        this.geoLocation = geoLocation;
        this.updatedAt = Timestamp.now();
    }

    /**
     * Gets the geographical location of the entrant.
     *
     * @return The geographical location of the entrant.
     */
    public GeoPoint getGeoLocation() {
        return geoLocation;
    }

    /**
     * Sets the status of the entrant on the waiting list.
     *
     * @param entrantStatus The status of the entrant.
     */
    public void setStatus(EntrantStatus entrantStatus) {
        this.entrantStatus = entrantStatus;
        this.updatedAt = Timestamp.now();
    }

    /**
     * Gets the status of the entrant on the waiting list.
     *
     * @return The status of the entrant.
     */
    public EntrantStatus getStatus() {
        return entrantStatus;
    }

    /**
     * Sets the notified status of the entrant.
     *
     * @param notified The notified status of the entrant.
     */
    public void setNotified(boolean notified) {
        this.notified = notified;
        this.updatedAt = Timestamp.now();
    }

    /**
     * Gets the notified status of the entrant.
     *
     * @return The notified status of the entrant.
     */
    public boolean isNotified() {
        return notified;
    }

    /**
     * Gets the timestamp when the entrant joined the waiting list.
     *
     * @return The timestamp when the entrant joined the waiting list.
     */
    public Timestamp getCreatedAt() {
        return createdAt;
    }

    /**
     * Gets the timestamp when the entrant was last updated.
     *
     * @return The timestamp when the entrant was last updated.
     */
    public Timestamp getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Timestamp updatedAt) {
        this.updatedAt = updatedAt;
    }
}